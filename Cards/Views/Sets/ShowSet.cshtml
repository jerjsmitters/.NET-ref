@model Cards.ViewModels.ShowSetViewModel
@using Microsoft.AspNet.Identity
@using Cards.Models

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    string UserVisibility(Set set)
    {
        var userId = User.Identity.GetUserId();
        return (userId == set.UserId) ? "flex" : "none";
    }

    string DescriptionHelper()
    {
        return (Model.Set.Description == null) ? "No description available" : Model.Set.Description;
    }

    string ExtraMarginIfAuth()
    {
        return (User.Identity.IsAuthenticated) ? "Auth-card" : "Unauth-card";
    }
}




<div id="showset-container">
    <h2 id="showset-title">@Model.Set.Name</h2>
    <div style="display: @UserVisibility(Model.Set)" id="set-operations">
        <div>
            <a href="@Url.Action("EditSet", "Sets", new {SetId = Model.Set.SetId})"
               id="edit-set-button">
                Edit Set
            </a>
            <a href="@Url.Action("DeleteSet", "Sets", new {SetId = Model.Set.SetId})"
               id="delete-set-button">
                Delete Set
            </a>
        </div>
        <a href="@Url.Action("AddCard", "Sets", new {SetId = Model.Set.SetId})"
           id="add-card-button">
            Add Card
        </a>
    </div>
    <a href="@Url.Action("Test", "Sets", new { SetId = Model.Set.SetId })"
       id="test-button">
        Test me!
    </a>
    <div id="showset-description-show">Details</div>
    <div id="showset-description">
        <span id="close-description-button">x</span>
        <h4>Details</h4>
        Description: @DescriptionHelper() <br />
        Owner: @Model.Set.User.UserName <br />
        Subject: @Model.Set.Subject.Name <br />
        Time Created: @Model.Set.Date <br />
        Card Count: @Model.Set.CardCount
    </div>

    <ul id="card-container">
        @foreach (var card in Model.Set.Cards)
        {
            <li class="card-unit @ExtraMarginIfAuth()">
                <div class="card">
                    <div class="card-front">@card.Front</div>
                    <div class="card-back">@card.Back</div>
                </div>
                <div class="card-operations">
                    <a href="@Url.Action("EditCard", "Sets", new {SetId = Model.Set.SetId, CardId = card.CardId})"
                       style="display: @UserVisibility(Model.Set)"
                       class="edit-card-button">Edit</a>
                    <a href="@Url.Action("DeleteCard", "Sets", new {SetId = Model.Set.SetId, CardId = card.CardId})"
                       style="display: @UserVisibility(Model.Set)"
                       class="delete-card-button">Delete</a>
                </div>
            </li>

        }
    </ul>
</div>

